[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "advant-of-code"
version = "2024"
description = 'Advent Of Code Helper'
requires-python = ">=3.13"
license = "MIT"
keywords = []
authors = [
  { name = "Olivier Dormond", email = "olivier.dormond@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = ["requests"]

[project.urls]
Documentation = "https://github.com/odormond/advant-of-code"
Issues = "https://github.com/odormond/advant-of-code/issues"
Source = "https://github.com/odormond/advant-of-code"

[project.scripts]
setup-aoc = "advent_of_code:setup"
day = "advent_of_code:run_day"

[tool.hatch.build]
packages = ["advent_of_code"]

[tool.hatch.envs.hatch-static-analysis]
dependencies = ["ruff>=0.8.1"]
config-path = "none"

[tool.ruff]
target-version = "py313"
line-length = 120
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
  # Ignore asserts and prints
  "S101", "T201", "RUF018",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.isort]
known-first-party = ["advant_of_code"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]
